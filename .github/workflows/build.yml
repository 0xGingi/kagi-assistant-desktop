name: Build App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            bundles: "dmg"
          - platform: ubuntu-latest
            bundles: "deb,appimage,rpm"
          - platform: windows-latest
            bundles: "msi,nsis"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Install frontend dependencies
        run: bun install
        
      - name: Show Tauri config
        run: cat src-tauri/tauri.conf.json
        shell: bash
        
      - name: Debug Tauri workspace (Unix)
        if: matrix.platform != 'windows-latest'
        run: |
          ls -la
          ls -la src-tauri/
        shell: bash
          
      - name: Debug Tauri workspace (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          dir
          dir src-tauri\
        shell: pwsh
          
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_BUILD_DEBUG: true
          TAURI_LOG_LEVEL: debug
        with:
          tauriScript: "bun tauri"
          args: "--verbose --bundles ${{ matrix.bundles }}"
          tagName: ${{ github.ref_type == 'tag' && github.ref_name || 'v0.1.0' }}
          releaseName: 'Kagi Assistant v0.1.0'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false 