name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (leave empty to use latest tag)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            args: "--bundles deb,rpm,appimage"
          - platform: windows-latest
            args: "--bundles msi,nsis"
          - platform: macos-latest
            args: "--target aarch64-apple-darwin --bundles app,dmg"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin --bundles app,dmg"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}
      
      - name: Get tag name
        id: get_tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -n "${{ github.event.inputs.tag }}" ]; then
              TAG="${{ github.event.inputs.tag }}"
            else
              TAG=$(git describe --tags --abbrev=0)
            fi
          else
            TAG="${{ github.ref_name }}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Detected tag: $TAG"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install -y libegl1-mesa-dev libgl1-mesa-dev mesa-common-dev

      - name: Install macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          brew install create-dmg
      
      - name: Configure macOS for unsigned builds
        if: matrix.platform == 'macos-latest'
        run: |
          echo "Configuring for ad-hoc signing"
          unset APPLE_CERTIFICATE 2>/dev/null || true
          unset APPLE_CERTIFICATE_PASSWORD 2>/dev/null || true
          unset APPLE_SIGNING_IDENTITY 2>/dev/null || true
          unset APPLE_ID 2>/dev/null || true
          unset APPLE_PASSWORD 2>/dev/null || true
          unset APPLE_TEAM_ID 2>/dev/null || true
          export CI=true
      
      - name: Install frontend dependencies
        run: bun install
        
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          CI: true
        with:
          tauriScript: "bun tauri"
          tagName: ${{ steps.get_tag.outputs.tag }}
          releaseName: 'Kagi Assistant Desktop ${{ steps.get_tag.outputs.tag }}'
          releaseBody: 'Automated release of Kagi Assistant Desktop ${{ steps.get_tag.outputs.tag }}. Check assets for your platform.'
          releaseDraft: false
          prerelease: false
          includeDebug: false
          includeRelease: true
          updaterJsonPreferNsis: false
          args: ${{ matrix.args }} 